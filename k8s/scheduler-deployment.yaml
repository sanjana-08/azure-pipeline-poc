# # k8s/scheduler-deployment.yaml
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: dask-scheduler
# spec:
#   replicas: 2
#   selector:
#     matchLabels: { app: dask-scheduler }
#   template:
#     metadata:
#       labels: { app: dask-scheduler }
#     spec:
#       containers:
#       - name: scheduler
#         image: dasymetric:latest
#         imagePullPolicy: Never
#         command: ["dask", "scheduler"]
#         env:
#           - name: DASK_DISTRIBUTED__WORKER__MEMORY__TARGET
#             value: "0.8"
#           - name: DASK_DISTRIBUTED__WORKER_MEMORY__SPILL
#             value: "0.9"
#         ports:
#           - containerPort: 8786
#           - containerPort: 8787
#         readinessProbe:
#           httpGet:
#             path: /status
#             port: 8787
#           initialDelaySeconds: 5
#           periodSeconds: 10

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: dask-scheduler
# spec:
#   replicas: 1
#   selector:
#     matchLabels: { app: dask-scheduler }
#   template:
#     metadata:
#       labels: { app: dask-scheduler }
#       annotations:
#         cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
#     spec:
#       # nodeSelector:
#       #     agentpool: test
#       imagePullSecrets:
#         - name: acr-auth  # create this via `az acr update —attach-acr` or pull secret
#       containers:
#       - name: scheduler
#         image: popaloc.azurecr.io/samples/dasymetric:latest
#         command: ["dask", "scheduler"]
#         resources:
#           requests:
#             cpu: "2"
#             memory: "14Gi"
#           # limits:
#           #   cpu: "1"
#           #   memory: "14Gi"
#         ports:
#           - containerPort: 8786

#           - containerPort: 8787
       
# dask-scheduler Deployment (unchanged apart from context)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dask-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dask-scheduler
  template:
    metadata:
      labels:
        app: dask-scheduler
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
    spec:
      terminationGracePeriodSeconds: 120
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: dask-worker
              topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: acr-auth
      containers:
      - name: scheduler
        image: popaloc.azurecr.io/samples/dasymetric:latest
        args: ["dask","scheduler","--dashboard-address=:8787"]
        resources:
          requests: { cpu: "2", memory: "14Gi" }
          limits:   { cpu: "2", memory: "14Gi" }   # Guaranteed QoS
        ports:
          - name: tcp-comm
            containerPort: 8786
          - name: http-dashboard
            containerPort: 8787
        livenessProbe:
          tcpSocket: { port: 8786 }
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 6
        readinessProbe:
          tcpSocket: { port: 8786 }
          initialDelaySeconds: 10
          periodSeconds: 5
---
# PDB can live in the same file; it's a separate resource
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dask-scheduler-pdb
  # namespace: default   # uncomment/set if you’re NOT applying with -n <ns>
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: dask-scheduler















